// <auto-generated />
using System;
using Infraestructure.Core.Context.SQLServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infraestructure.Core.Migrations
{
    [DbContext(typeof(ContextSql))]
    partial class ContextSqlModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Infraestructure.Entity.Entities.General.AmountEntity", b =>
                {
                    b.Property<int>("AmountId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnName("Amount")
                        .HasColumnType("decimal(18,0)");

                    b.Property<DateTime?>("CreationDate");

                    b.Property<string>("CreationUser");

                    b.Property<DateTime?>("ModificationDate");

                    b.Property<string>("ModificationUser");

                    b.Property<int>("VehicleType")
                        .HasColumnName("VehicleType")
                        .HasColumnType("int");

                    b.HasKey("AmountId");

                    b.ToTable("Amount","General");
                });

            modelBuilder.Entity("Infraestructure.Entity.Entities.InputsOutputs.ControlInputsOutputsEntity", b =>
                {
                    b.Property<int>("ControlInputsOutputsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationDate");

                    b.Property<string>("CreationUser");

                    b.Property<DateTime?>("DepartureTime")
                        .HasColumnName("DepartureTime")
                        .HasColumnType("datetime2(7)");

                    b.Property<DateTime>("EntryTime")
                        .HasColumnName("EntryTime")
                        .HasColumnType("datetime2(7)");

                    b.Property<DateTime?>("ModificationDate");

                    b.Property<string>("ModificationUser");

                    b.Property<decimal>("TotalMinutesOfStay")
                        .HasColumnName("TotalMinutesOfStay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VehiclePlate")
                        .HasColumnName("VehiclePlate")
                        .HasColumnType("varchar(6)");

                    b.Property<int>("VehicleType")
                        .HasColumnName("VehicleType")
                        .HasColumnType("int");

                    b.HasKey("ControlInputsOutputsId");

                    b.ToTable("ControlInputsOutputs","InputsOutputs");
                });

            modelBuilder.Entity("Infraestructure.Entity.Entities.Vehicle.PaymentVehicleEntity", b =>
                {
                    b.Property<int>("PaymentVehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PaymentVehicleId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationDate");

                    b.Property<string>("CreationUser");

                    b.Property<DateTime?>("ModificationDate");

                    b.Property<string>("ModificationUser");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnName("CutoffDate")
                        .HasColumnType("datetime2(7)");

                    b.Property<decimal>("PaymentValue")
                        .HasColumnName("TotalMinutesOfStay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VehicleId")
                        .HasColumnName("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("PaymentVehicleId");

                    b.HasIndex("VehicleId");

                    b.ToTable("PaymentVehicle","Vehicle");
                });

            modelBuilder.Entity("Infraestructure.Entity.Entities.Vehicle.VehicleEntity", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VehicleId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationDate");

                    b.Property<string>("CreationUser");

                    b.Property<DateTime>("CutoffDate")
                        .HasColumnName("CutoffDate")
                        .HasColumnType("datetime2(7)");

                    b.Property<DateTime?>("ModificationDate");

                    b.Property<string>("ModificationUser");

                    b.Property<decimal>("TotalMinutesOfStay")
                        .HasColumnName("TotalMinutesOfStay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VehiclePlate")
                        .HasColumnName("VehiclePlate")
                        .HasColumnType("varchar(6)");

                    b.Property<int>("VehicleType")
                        .HasColumnName("VehicleType")
                        .HasColumnType("int");

                    b.HasKey("VehicleId");

                    b.ToTable("Vehicle","Vehicle");
                });

            modelBuilder.Entity("Infraestructure.Entity.Entities.Vehicle.PaymentVehicleEntity", b =>
                {
                    b.HasOne("Infraestructure.Entity.Entities.Vehicle.VehicleEntity", "VehicleEntity")
                        .WithMany("PaymentVehicleEntities")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
